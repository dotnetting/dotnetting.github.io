<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>aws-lambda on dotNetting</title><link>https://dotnetting.net/tags/aws-lambda/</link><description>Recent content in aws-lambda on dotNetting</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 25 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://dotnetting.net/tags/aws-lambda/index.xml" rel="self" type="application/rss+xml"/><item><title>How to do logging in .NET AWS Lambda functions</title><link>https://dotnetting.net/2023/05/how-to-do-logging-in-.net-aws-lambda-functions/</link><pubDate>Thu, 25 May 2023 00:00:00 +0000</pubDate><guid>https://dotnetting.net/2023/05/how-to-do-logging-in-.net-aws-lambda-functions/</guid><description>This article discusses four different ways of sending logs to Cloudwatch from a Lambda function implemented in .NET.
Using ILambdaContext.Logger The ILambdaLogger is the most limited option, but it is also the only one readily available in the lambda without requiring any configuration. It just writes messages in one line, without any specific structure. There is no support to add exceptions when logging errors, or using message template with parameters. This is a good option for a very basic logging needs.</description></item></channel></rss>